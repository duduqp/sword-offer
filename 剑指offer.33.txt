 vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> ret;
        if(!root)
        {
            return ret;
        }
        vector<int> path;
        dfs(ret,root,sum,0,path);
        return ret;
    }


    void dfs(vector<vector<int>> & ret,TreeNode* root, int sum,int cur,vector<int> & path)
    {
        if(root->left==NULL&&root->right==NULL)
        {
            if(root->val+cur==sum)
            {
                path.push_back(root->val);
                ret.push_back(path);
        //        cout << "ret pushin" << endl;
                path.pop_back();
            }
            return ;
        }

        path.push_back(root->val);
        
        
         if(root->left)
        {
            dfs(ret,root->left,sum,cur+root->val,path);
        }
        if(root->right)
        {
            dfs(ret,root->right,sum,cur+root->val,path);
        }
        path.pop_back();
        return ;
    }