Node* treeToDoublyList(Node* root) {
            if(!root)
            {
                return NULL;
            }
            Node * tmp=root;
            stack<Node *> s;
            vector<Node *> res;
            while(tmp||!s.empty())
            {
                
                if(tmp)
                {
                    s.push(tmp);
                    tmp=tmp->left;
                }else{
                tmp=s.top();
                s.pop();
                res.push_back(tmp);
                tmp=tmp->right;
                }    
            }

            if(res.size()==1)
            {
                res[0]->left=res[0];
                res[0]->right=res[0];
                return res[0];
            }
            int sz=res.size();
            for(int i =1;i<sz-1;++i)
            {
                res[i]->left=res[i-1];
                res[i]->right=res[i+1];
            }


            
            res[0]->left=res.back();
            res[0]->right=res[1];
            res.back()->left=res[sz-2];
            res.back()->right=res.front();
           
            return res[0]; 
    }